# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: 
    - main 
    - preview 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains jobs called "Build-Main" and "Build-Preview"
  Build-Main:
    if: ${{ github.ref == 'refs/heads/main' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Build the site - Main
        run: |
          cd /home/ubuntu
          [ -d DCVDocServer ] && rm -rf DCVDocServer
          [ -d capture-vision-docs-server ] && rm -rf capture-vision-docs-server
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCVDocServer ] && mkdir -p DCVDocServer
          git clone --depth 1  https://github.com/dynamsoft-docs/capture-vision-docs-server.git capture-vision-docs-server
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./capture-vision-docs-server/* ./DCVDocServer/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCVDocServer/
          cd DCVDocServer && bundle exec jekyll build --incremental

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_DYNAMSOFT_LOCAL_SERVER }}
          username: ${{ secrets.FTP_DYNAMSOFT_LOCAL_USER }}
          password: ${{ secrets.FTP_DYNAMSOFT_LOCAL_PASSWORD }}
          port: 21 
          local-dir: /home/ubuntu/DCVDocServer/_site/
          server-dir: /www.dynamsoft.com/capture-vision/docs/server/        

      - name: Trigger Webhook 
        run: | 
          curl -X POST -H "${{ secrets.WEBHOOK_USER }}" -H "${{ secrets.WEBHOOK_TOKEN }}" -H "Content-Type: application/json" -d "[\"/capture-vision/docs/server/*\"]" ${{ secrets.WEBHOOK_URL }}

          
  Build-Preview:
    if: ${{ github.ref == 'refs/heads/preview' }}
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a set of commands using the runners shell
      - name: Build the site - Preview
        run: |
          cd /home/ubuntu
          [ -d DCVDocServer-preview ] && rm -rf DCVDocServer-preview
          [ -d capture-vision-docs-server-preview ] && rm -rf capture-vision-docs-server-preview
          [ -d Docs-Template-Repo-Preview ] && rm -rf Docs-Template-Repo-Preview
          [ ! -d DCVDocServer-preview ] && mkdir -p DCVDocServer-preview
          git clone --depth 1 --branch preview https://${{ secrets.GIT_USER }}:${{ secrets.GIT_PAT }}@github.com/dynamsoft-docs/capture-vision-docs-server.git capture-vision-docs-server-preview
          git clone --depth 1 --branch preview https://github.com/dynamsoft-docs/Docs-Template-Repo.git Docs-Template-Repo-Preview
          cp -rfp ./capture-vision-docs-server-preview/* ./DCVDocServer-preview/
          cp -rfp ./Docs-Template-Repo-Preview/* ./DCVDocServer-preview/
          sed -i -e "1,3s/blob\/master$/blob\/preview/" \
          -e "1,3s/blob\/main$/blob\/preview/" /home/ubuntu/DCVDocServer-preview/_config.yml
          cd DCVDocServer-preview && bundle exec jekyll build --incremental

      - name: Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.0
        with:
          server: ${{ secrets.FTP_TEST_SITE_SERVER }}
          username: ${{ secrets.FTP_TEST_SITE_USER }}
          password: ${{ secrets.FTP_TEST_SITE_PASSWORD }}
          port: 7500 
          local-dir: /home/ubuntu/DCVDocServer-preview/_site/
          server-dir: /www.dynamsoft.com/capture-vision/docs/server/        
          
